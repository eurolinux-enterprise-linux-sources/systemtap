commit b313171061101a2eef6b5c5541d91e45d561bfb1
Author: David Smith <dsmith@redhat.com>
Date:   Tue Jun 3 11:05:20 2014 -0500

    Fixed BZ1099791 by updating the runtime to correctly find the vdso.
    
    * translate.cxx (find_vdso): Add comment mentioning the logic in
      _stp_vma_match_vdso needs to match.
    * runtime/vma.c (_stp_vma_match_vdso): Add logic from find_vdso() to parse
      the path, looking for the vdso.

diff --git a/runtime/vma.c b/runtime/vma.c
index a42d1cf..fbb3ef8 100644
--- a/runtime/vma.c
+++ b/runtime/vma.c
@@ -39,11 +39,29 @@ static void _stp_vma_match_vdso(struct task_struct *tsk)
       for (i = 0; i < _stp_num_modules && found == NULL; i++) {
 	struct _stp_module *m = _stp_modules[i];
 	if (m->path[0] == '/'
-	    && m->num_sections == 1
-	    && strncmp(m->name, "vdso", 4) == 0)
+	    && m->num_sections == 1)
 	  {
 	    unsigned long notes_addr;
 	    int all_ok = 1;
+
+	    /* Assume that if the path's basename starts with 'vdso'
+	     * and ends with '.so', it is the vdso.
+	     *
+	     * Note that this logic should match up with the logic in
+	     * the find_vdso() function in translate.cxx. */
+	    const char *name = strrchr(m->path, '/');
+	    if (name)
+	      {
+		const char *ext;
+
+		name++;
+		ext = strrchr(name, '.');
+		if (!ext
+		    || strncmp("vdso", name, 4) != 0
+		    || strcmp(".so", ext) != 0)
+		  continue;
+	      }
+
 	    notes_addr = vdso_addr + m->build_id_offset;
 	    dbug_task_vma(1,"notes_addr %s: 0x%lx + 0x%lx = 0x%lx (len: %x)\n", m->path,
 		  vdso_addr, m->build_id_offset, notes_addr, m->build_id_len);
diff --git a/translate.cxx b/translate.cxx
index d784a68..0dab0b1 100644
--- a/translate.cxx
+++ b/translate.cxx
@@ -6448,11 +6448,18 @@ static int find_vdso(const char *path, const struct stat *, int type)
 {
   if (type == FTW_F)
     {
+      /* Assume that if the path's basename starts with 'vdso' and
+       * ends with '.so', it is the vdso.
+       *
+       * Note that this logic should match up with the logic in the
+       * _stp_vma_match_vdso() function in runtime/vma.c. */
       const char *name = strrchr(path, '/');
       if (name)
 	{
+	  const char *ext;
+
 	  name++;
-	  const char *ext = strrchr(name, '.');
+	  ext = strrchr(name, '.');
 	  if (ext
 	      && strncmp("vdso", name, 4) == 0
 	      && strcmp(".so", ext) == 0)
