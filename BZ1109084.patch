commit 4715f85e45264d813b8e6b368f29a4230d9a34c0
Author: Jonathan Lebon <jlebon@redhat.com>
Date:   Fri Jun 13 13:24:36 2014 -0400

    initscript: check script names
    
    Because script names are the basis for some variable names (e.g.
    script_name_REQ), they need to adhere to bash variable naming rules.
    These are almost the same rules that we enforce for stap -m, so we just
    fail 'earlier'. See also RHBZ1109084.
    
    This patch ensures that scripts with invalid names are skipped and
    logged.

diff --git a/initscript/systemtap.in b/initscript/systemtap.in
index 2d68469..14e3949 100755
--- a/initscript/systemtap.in
+++ b/initscript/systemtap.in
@@ -242,18 +242,32 @@ ALLOW_CACHEONLY=$?
 check_bool $LOG_BOOT_ERR
 LOG_BOOT_ERR=$?
 
+is_valid_script_name () {
+  # Same rules as stap -m with the addition of starting
+  # with a non-digit so that valid shell variables can be
+  # formed from it (for the config file).
+  if [[ $1 =~ ^[a-zA-Z_][a-zA-Z0-9_]*$ ]]; then
+    log "$1 is not a valid script name (must match [a-zA-Z_][a-zA-Z0-9_]*)"
+    return 1
+  fi
+}
+
 __get_all_scripts () {
   local s
   if [ $ALLOW_CACHEONLY -eq 1 ]; then
     for s in "$CACHE_PATH"/*.ko; do
       if [ -f "$s" ]; then
-        basename "$s" | sed s/\.ko$//g
+        script=`basename "$s" .ko`
+        is_valid_script_name $script
+        [ $? -eq 0 ] && echo $script
       fi
     done
   fi
   for s in "$SCRIPT_PATH"/*.stp; do
     if [ -f "$s" ]; then
-      basename "$s" | sed s/\.stp$//g
+      script=`basename "$s" .stp`
+      is_valid_script_name $script
+      [ $? -eq 0 ] && echo $script
     fi
   done
 }
@@ -588,7 +602,12 @@ start () {
 
   start_scripts=$SCRIPTS
   if [ -n "$DEFAULT_START" -a -z "$OPT_SCRIPTS" ]; then
-    start_scripts="$DEFAULT_START"
+
+    # Sanity check the names
+    for s in $DEFAULT_START; do
+      is_valid_script_name $s
+      [ $? -eq 0 ] && start_scripts="$start_scripts $s"
+    done
   fi
 
   if [ -z "$start_scripts" ]; then

commit fbcde985c22471e6c069512950f925911f2ad342
Author: Jonathan Lebon <jlebon@redhat.com>
Date:   Fri Jun 13 13:33:49 2014 -0400

    man/systemtap.8: mention naming requirement
    
    Add blurb to clarify that script names must be alphanumeric and must not
    start with a number.

diff --git a/man/systemtap.8.in b/man/systemtap.8.in
index 798a278..037402e 100644
--- a/man/systemtap.8.in
+++ b/man/systemtap.8.in
@@ -40,10 +40,11 @@ The configuration file of the initscript is located at
 GLOBAL PARAMETERS section.
 
 Scripts must be placed in the \fB@sysconfdir@/systemtap/script.d\fR directory
-and must have a \fB.stp\fR extension. When referring to them on the command-line
-however, there in no need to include the \fB.stp\fR extension. The scripts
-directory may be changed by setting the SCRIPT_PATH parameter in the
-configuration file.
+and must have a \fB.stp\fR extension. When referring to them on the
+command-line however, there in no need to include the \fB.stp\fR extension.
+Script names can only contain alphanumeric characters (and '_') and must not
+start with a number. The scripts directory may be changed by setting the
+SCRIPT_PATH parameter in the configuration file.
 
 .SH COMMANDS
 One of the commands below must be specified:
commit b995b67c225c77fd7b835c0d41b50c9372993b7d
Author: Jonathan Lebon <jlebon@redhat.com>
Date:   Mon Jun 23 10:26:52 2014 -0400

    initscript: invert logic and fix DEFAULT_START
    
    The logic of is_valid_script_name was inverted. Fix it.
    
    Also, we need to blank out the list of scripts to start before actually
    collecting the valid ones from DEFAULT_START.

diff --git a/initscript/systemtap.in b/initscript/systemtap.in
index 14e3949..7930b0f 100755
--- a/initscript/systemtap.in
+++ b/initscript/systemtap.in
@@ -246,7 +246,7 @@ is_valid_script_name () {
   # Same rules as stap -m with the addition of starting
   # with a non-digit so that valid shell variables can be
   # formed from it (for the config file).
-  if [[ $1 =~ ^[a-zA-Z_][a-zA-Z0-9_]*$ ]]; then
+  if ! [[ $1 =~ ^[a-zA-Z_][a-zA-Z0-9_]*$ ]]; then
     log "$1 is not a valid script name (must match [a-zA-Z_][a-zA-Z0-9_]*)"
     return 1
   fi
@@ -603,7 +603,8 @@ start () {
   start_scripts=$SCRIPTS
   if [ -n "$DEFAULT_START" -a -z "$OPT_SCRIPTS" ]; then
 
-    # Sanity check the names
+    # Only pick the names in DEFAULT_START with valid names
+    start_scripts=
     for s in $DEFAULT_START; do
       is_valid_script_name $s
       [ $? -eq 0 ] && start_scripts="$start_scripts $s"
